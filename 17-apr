<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Visual Form Builder</title>

    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 0;
            margin: 0;
            background: #f2f4f8;
        }

        .navbar {
            background-color: #fff;
            color: #666;
            box-shadow: 0px 1px 15px 1px rgba(113, 106, 202, 0.1);
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        #sidebar {
            width: 300px;
            background-color: #fff;
            box-sizing: border-box;
            height: 100vh;
        }

        #sidebar h1 {
            margin-bottom: 20px;
        }

        #sidebar button {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 10px;
            width: 100%;
            border: none;
            border-bottom: 1px solid #eee !important;
            background: rgba(255, 255, 255, 0.11);
            padding: 15px;
        }

        #sidebar button:nth-child(2) {
            border-top: 1px solid #eee !important;
        }

        #sidebar button::after {
            content: '+';
            margin-left: 5px;
        }

        #content {
            flex-grow: 1;
            padding: 40px;
            box-sizing: border-box;
        }

        #formBuilder {

            background: #fff;
            padding: 80px 50px;
        }

        .field {
            margin-bottom: 10px;
            border: 1px solid #ccc;
            padding: 10px;
            background-color: #f9f9f9;
            cursor: move;
            /* Indicates that you can drag the field */
        }

        input,
        select,
        textarea {
            width: calc(100% - 10px);
            padding: 5px;
            margin-top: 5px;
        }

        button {
            margin-right: 5px;
        }

        .container {
            display: flex;
        }

        button#saveForm {
            padding: 15px 40px;
            background: none;
            border: 1px solid #666666;
            border-radius: 8px;
            font-size: 15px;
            font-weight: 500;
        }
        .logo{
            font-size: 18px;
            font-weight: 500;
        }
    </style>
</head>

<body>
    <div class="navbar">
        <div>
            <h2 class="logo">Form</h2>
        </div>
        <button id="saveForm" onclick="saveForm()">Save</button>
    </div>
    <div class="container">

        <div id="sidebar">
            <h2>compounts</h2>
            <button onclick="addElement('input')">Add Input</button>
            <button onclick="addElement('textarea')">Add Textarea</button>
            <button onclick="addElement('select')">Add Select</button>
        </div>
        <div id="content">
            <div id="formBuilder" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
        </div>
    </div>
    <script src="script.js"></script>
</body>

</html>





let formData = [
    // Initial sample data provided by you in JSON
    { id: "c0ac49c5-871e-4c72-a878-251de465e6b4", type: "input", label: "Sample Label", placeholder: "Sample placeholder" },
    { id: "146e69c2-1630-4a27-9d0b-f09e463a66e4", type: "select", label: "Sample Label", options: ["Sample Option", "Sample Option", "Sample Option"] },
    { id: "45002ecf-85cf-4852-bc46-529f94a758f5", type: "input", label: "Sample Label", placeholder: "Sample Placeholder" },
    { id: "680cff8d-c7f9-40be-8767-e3d6ba420952", type: "textarea", label: "Sample Label", placeholder: "Sample Placeholder" }
];

function initForm() {
    const formBuilder = document.getElementById('formBuilder');
    formBuilder.innerHTML = '';
    formData.forEach(element => {
        const fieldDiv = document.createElement('div');
        fieldDiv.className = 'field';
        fieldDiv.id = element.id;
        fieldDiv.draggable = true;
        fieldDiv.ondragstart = drag;
        fieldDiv.innerHTML = `
            <label>${element.label}</label>
            ${element.type === 'select' ? renderSelect(element) : renderInput(element)}
            <button onclick="deleteElement('${element.id}')">Delete</button>
        `;
        formBuilder.appendChild(fieldDiv);
    });
}

function renderInput(element) {
    return `<input type="${element.type}" placeholder="${element.placeholder}" value="">`;
}

function renderSelect(element) {
    let optionsHTML = element.options.map(option => `<option>${option}</option>`).join('');
    return `<select>${optionsHTML}</select>`;
}

function addElement(type) {
    const newId = Math.random().toString(36).substring(2, 15); // Generate a pseudo-random ID
    // Set defaults based on sample JSON
    let newElement = {
        id: newId,
        type: type,
        label: "Sample Label", // Default label from sample JSON
        placeholder: "Sample Placeholder", // Default placeholder from sample JSON
        options: ["Sample Option", "Sample Option", "Sample Option"] // Default options for select
    };
    if (type !== 'select') {
        delete newElement.options; // Remove options key for input and textarea
    }
    formData.push(newElement);
    initForm();
}

function deleteElement(id) {
    formData = formData.filter(element => element.id !== id);
    initForm();
}

function saveForm() {
    console.log(JSON.stringify(formData));
}

function allowDrop(event) {
    event.preventDefault();
}

function drag(event) {
    event.dataTransfer.setData("text", event.target.id);
}

function drop(event) {
    event.preventDefault();
    var data = event.dataTransfer.getData("text");
    var dropped = document.getElementById(data);
    var target = event.target.closest('.field');

    if (target && dropped !== target) {
        target.before(dropped); // Simpler logic for reordering
    }
}

initForm();
